class School {
  constructor(name,level,numberOfStudents){
    this._name = name;
    this._level = level;
    this._numberOfStudents = numberOfStudents;
  }
  
  get name() {
    return this._name;
  }
  
  get level() {
    return this._level;
  }
  
  get numberOfStudents(){
    return this._numberOfStudents;
  }
  
  set numberOfStudents(num){
    if(typeof num === 'number')
    	this._numberOfStudents = num;
    else
      console.log('Invalid input: numberOfStudents must be set to a Number.');
  }
  
  quickFacts() {
    console.log(this._name+' educates '+this._numberOfStudents+' students at the '+this._level+' school level.');
  }
  
  static pickSubstituteTeacher(substituteTeachers) {
    const index = Math.floor(Math.random()*substituteTeachers.length);
    
    return substituteTeachers[index];
  }
  
}


class Primary extends School{
  constructor(name, numberOfStudents, pickupPolicy){
    super(name, 'primary', numberOfStudents);
    this._pickupPolicy = pickupPolicy;
  }
  
  get pickupPolicy(){
    return this._pickupPolicy;
  }
}

class Middle extends School{
  constructor(name, numberOfStudents){
    super(name, 'middle', numberOfStudents);
  }
}

class High extends School{
  constructor(name, numberOfStudents, sportsTeams){
    super(name, 'high', numberOfStudents);
    this._sportsTeams = sportsTeams;
  }
  
  get sportsTeams(){
    console.log(this._sportsTeams);
  }
}


/*primary school*/
const lorraineHansbury = new Primary('Lorraine Hansbury', 514, 'Students must be picked up by a parent, guardian, or a family member over the age of 13.');

lorraineHansbury.quickFacts();
//lorraineHansbury.schools();
substitutes = ['Jamal Crawford', 'Lou Williams', 'J. R. Smith', 'James Harden', 'Jason Terry', 'Manu Ginobli'];
console.log(School.pickSubstituteTeacher(substitutes));

/*high school*/
const alSmith = new High('Al E. Smith', 415, ['Baseball', 'Basketball', 'Volleyball', 'Track and Field']);
alSmith.sportsTeams;

class SchoolCatalog{
  construstor(){
    this._schools = ['ciao'];
  }
  
  get schools(){
    return this._schools;
  }
  
  set schools(school){
    this._schools.push(school);
  }    
}


const PrimarySchools = new SchoolCatalog();
console.log(PrimarySchools.schools);

